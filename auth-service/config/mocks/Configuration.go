// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	config "auth-service/config"

	mock "github.com/stretchr/testify/mock"

	viper "github.com/spf13/viper"
)

// Configuration is an autogenerated mock type for the Configuration type
type Configuration struct {
	mock.Mock
}

// AppConfig provides a mock function with given fields:
func (_m *Configuration) AppConfig() config.AppConfig {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for AppConfig")
	}

	var r0 config.AppConfig
	if rf, ok := ret.Get(0).(func() config.AppConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(config.AppConfig)
		}
	}

	return r0
}

// Load provides a mock function with given fields: env
func (_m *Configuration) Load(env *viper.Viper) {
	_m.Called(env)
}

// NewConfiguration creates a new instance of Configuration. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfiguration(t interface {
	mock.TestingT
	Cleanup(func())
}) *Configuration {
	mock := &Configuration{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
